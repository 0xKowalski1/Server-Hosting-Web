package templates

import("0xKowalski1/server-hosting-web/models")

templ GameserversPage(gameservers []models.Gameserver) {
    <div class="p-8 min-h-screen">
        <a href="/profile/gameservers/new" hx-get="/profile/gameservers/new" hx-target="#content" hx-swap="innerHTML" hx-push-url="true"
           class="inline-block mb-4 py-2 px-4 bg-blue-500 text-white font-semibold rounded-lg shadow-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-75">
            + New Gameserver
        </a>
        @GameserversList(gameservers)
    </div>
}

templ GameserversList(gameservers []models.Gameserver){

     <div class="grid grid-cols-1 gap-4 p-4">
         for _, gameserver := range gameservers {
            @GameserverCard(gameserver)
        }
    </div>
}

templ GameserverCard(gameserver models.Gameserver){
    <div class="rounded-lg border bg-card text-card-foreground shadow-sm grid grid-cols-1 md:grid-cols-2 lg:grid-cols-1 xl:grid-cols-1 gap-4 p-6" data-v0-t="card">
    <div class="flex items-center">
        <img
            src="/placeholder.svg"
            width="48"
            height="48"
            alt="Minecraft"
            class="mr-4"
            style="aspect-ratio: 48 / 48; object-fit: cover;"
        />
        <div>
            <div class="flex items-center justify-between">
                <h3 class="whitespace-nowrap text-2xl font-semibold leading-none tracking-tight">
                    Minecraft Server
                </h3>
                <div class="inline-flex w-fit items-center whitespace-nowrap rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 bg-green-400 text-green-900 dark:bg-green-600 dark:text-green-50">
                    Deployed
                </div>
            </div>
            <p class="text-sm text-muted-foreground">Running Minecraft 1.19.2</p>
        </div>
    </div>
    <div class="p-6 grid grid-cols-2 gap-4">
        <div class="flex flex-col gap-1">
            <span class="text-gray-500 dark:text-gray-400 text-sm">Memory</span>
            <div class="relative w-full h-4 bg-gray-200 rounded-full dark:bg-gray-700">
                <div class="absolute h-4 bg-green-500 rounded-full" style="width: 50%;"></div>
            </div>
        </div>
        <div class="flex flex-col gap-1">
            <span class="text-gray-500 dark:text-gray-400 text-sm">Storage</span>
            <div class="relative w-full h-4 bg-gray-200 rounded-full dark:bg-gray-700">
                <div class="absolute h-4 bg-green-500 rounded-full" style="width: 50%;"></div>
            </div>
        </div>
    </div>
    <div class="items-center p-6 flex gap-2">
        <button class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:text-accent-foreground h-10 px-4 py-2 bg-green-500 text-white hover:bg-green-600 dark:bg-green-600 dark:text-white dark:hover:bg-green-700">
            Start
        </button>
        <button class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:text-accent-foreground h-10 px-4 py-2 bg-red-500 text-white hover:bg-red-600 dark:bg-red-600 dark:text-white dark:hover:bg-red-700">
            Stop
        </button>
        <div class="flex gap-2 ml-auto">
            <button class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:text-accent-foreground h-10 px-4 py-2 bg-gray-500 text-white hover:bg-gray-600 dark:bg-gray-600 dark:text-white dark:hover:bg-gray-700">
                Archive
            </button>
            <button class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:text-accent-foreground h-10 px-4 py-2 bg-blue-500 text-white hover:bg-blue-600 dark:bg-blue-600 dark:text-white dark:hover:bg-blue-700">
                Edit
            </button>
        </div>
    </div>
    <div class="bg-gray-100 dark:bg-gray-900 p-4 rounded-lg">
<h4 class="text-lg font-semibold mb-2">Logs</h4>
<pre class="overflow-auto text-xs">LOG: System started successfully...</pre>
</div>

</div>
   }

templ GameserverForm(formData models.GameserverFormData, games []models.Game) {
    <form hx-post="/profile/gameservers" hx-target="#response" hx-swap="innerHTML" hx-boost="true" class="p-8">
        <div class="mb-4">
            <label for="name" class="block mb-2 text-sm font-medium font-header">Gameserver Name</label>
            <input type="text" id="name" name="name" required value={formData.Name}
                   class="mt-1 block w-full px-3 py-2 border border-gray-300 text-black rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                   placeholder="Enter gameserver name"/>
        </div>

        <div class="mb-4">
            @GameDropdown(games, formData.GameID)
        </div>

        <div class="mb-4">
            @MemorySlider()
        </div>

        <div class="mb-4">
            @StorageSlider()
        </div>

        <button type="submit" class="font-header w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
            Submit
        </button>
        <div id="response" class="mt-4"></div>
    </form>
}

templ GameDropdown(games []models.Game, initialGameID string){
    <label for="game" class="block font-header mb-2 text-sm font-medium">Select Game</label>
    <select id="game" name="game" value={initialGameID} required
            class="mt-1 block w-full px-3 py-2 text-black border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
        <option value="">Please select a game</option>
        for _, game := range games {
            @GameDropdownOption(game, initialGameID)
        }
    </select>
}

templ GameDropdownOption(game models.Game, initialGameID string){
    if game.ID.String() == initialGameID {
            <option value={game.ID.String()} selected>{game.Name}</option>
    } else {
        <option value={game.ID.String()}>{game.Name}</option>
    }
}

templ MemorySlider() {
    <label for="memory" class="block  font-header mb-2 text-sm font-medium">Memory (GB)</label>
    <input type="range" id="memory" name="memory" min="1" max="16" value="1"
           class="mt-1 block w-full cursor-pointer"
           oninput="document.getElementById('memoryValue').textContent = this.value + ' GB';"/>
    <span id="memoryValue" class="text-sm font-medium">1 GB</span>
}

templ StorageSlider() {
    <label for="storage" class="block  font-header mb-2  text-sm font-medium">Storage (GB)</label>
    <input type="range" id="storage" name="storage" min="5" step="5" max="60" value="5"
           class="mt-1 block w-full cursor-pointer"
           oninput="document.getElementById('storageValue').textContent = this.value + ' GB';"/>
    <span id="storageValue" class="text-sm font-medium">5 GB</span>
}

